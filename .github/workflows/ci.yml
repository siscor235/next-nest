name: CI

on:
  push:
  pull_request:
    types: [opened, reopened]

env:
  node_version: "14.x"
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  HEROKU_APP_NAME: nestjs-starter-thisismydesign

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

jobs:
  build-and-upload-docker-image:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write
    outputs:
      docker-tag: ${{ steps.meta.outputs.tags }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx to be able to use caching
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          file: Dockerfile.prod
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [build-and-upload-docker-image]
    env:
      NESTJS_STARTER_IMAGE: ${{ needs.build-and-upload-docker-image.outputs.docker-tag }}

    steps:
    - uses: actions/checkout@v2

    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Init
      run: ./scripts/docker_setup_init.sh

    - name: Pull images
      run: docker-compose pull

    - name: Run lint
      run: docker-compose run web yarn lint

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [build-and-upload-docker-image]
    env:
      NESTJS_STARTER_IMAGE: ${{ needs.build-and-upload-docker-image.outputs.docker-tag }}

    steps:
    - uses: actions/checkout@v2

    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Init
      run: ./scripts/docker_setup_init.sh

    - name: Pull images
      run: docker-compose pull

    - name: Run tests
      run: docker-compose run web yarn test

  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [build-and-upload-docker-image]
    env:
      NESTJS_STARTER_IMAGE: ${{ needs.build-and-upload-docker-image.outputs.docker-tag }}

    steps:
    - uses: actions/checkout@v2

    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Init
      run: ./scripts/docker_setup_init.sh

    - name: Pull images
      run: docker-compose pull

    - name: Run e2e tests
      run: docker-compose run web yarn test:e2e

  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.ref == 'refs/heads/master' && github.repository_owner == 'thisismydesign'
    needs: [lint, test, e2e]
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx to be able to use caching
        uses: docker/setup-buildx-action@v1

      - uses: docker/login-action@v1
        with:
          registry: registry.heroku.com
          username: _
          password: ${{ secrets.HEROKU_API_KEY }}

      - name: Docker build
        uses: docker/build-push-action@v2
        with:
          tags: registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web
          file: Dockerfile.prod
          load: true
          cache-from: type=gha
          cache-to: type=gha

      - name: Docker push
        run: docker push registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web

      - name: Run release command
        run: heroku container:release web -a ${{ env.HEROKU_APP_NAME }}
